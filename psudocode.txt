CPL Project Pseudocode
Written by Connor Bell, Dylan Carder, [add name here if contributed]

Code________________________________________________________________________
//Method to read in file
METHOD string[] read(filepath){
	File = open(filepath)
	strArray = READ ENTIRE FILE
	return strArray
}

//Define keywords to look out for
DEF keywords[] = [return, print, /*, etc…]

//Process the input relating to keywords
METHOD determine_process(input){
	interpret(input)
	output
}
//
___________________________________________________________________________
Suggestions:

1. Programming Language
    a. There is a different language required for each deliverable, choose wisely for the first one
    b. Java/C# are strict, Python is decently freeform 
2. Dictionary to hold a keyword and its process instruction or a method for each keyword?
    a. Language dependent (SCL)
    b. Dictionary could hold grammar, send to a recursive method to parse
3. Pass (string of code, keyword, grammar) to method
4. Cleaning: determine if code extends across multiple lines or is a block (if statement, loop…)
5. Figure out how to type at same time (not possible unfortunately)
    a. Paired programming in IDE has delayed typing
    b. Get in call  if we all work together and merge/copy-paste onto master (good idea)
6. Processing expected inputs:
    a. Override methods
    b. Get type (switch statement)
7. Read report if we should output:
8. Program the program we are to parse in whatever language is selected to develop the interpreter, see how it would work
